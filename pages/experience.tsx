import { Lexend } from "@next/font/google";
import Head from "next/head";
import Image from "next/image";
import React from "react";

import {
	FaReact,
	FaNodeJs,
	FaHtml5,
	FaCss3Alt,
	FaGitAlt,
	FaGithub,
} from "react-icons/fa";
import { TbBrandNextjs } from "react-icons/tb";
import {
	SiJavascript,
	SiTypescript,
	SiMongodb,
	SiMysql,
	SiTailwindcss,
	SiBitbucket,
	SiJirasoftware,
} from "react-icons/si";
import { InterfaceThemeLanguage } from "@/interfaces/Interface";
import Footer from "@/components/Footer";

const lexend = Lexend({ subsets: ["latin"], weight: "800" });
import { ExperiencesData } from "@/utils/experiences";

export default function Experience({
	theme,
	setTheme,
	lang,
	setLang,
}: InterfaceThemeLanguage) {
	return (
		<>
			<Head>
				<title>
					{lang ? "Experience - Portfolio" : "Experiencia - Portafolio"}
				</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.svg" />
			</Head>

			<div
				className={`${
					theme
						? "w-full h-full overflow-auto bg-gradient-to-b from-white to-[#f1f7fd] rounded-md duration-200"
						: "w-full h-full overflow-auto bg-gradient-to-b from-[#17181a] to-transparent rounded-md duration-200"
				}`}>
				<div className="relative w-full max-h-80 object-cover">
					<Image
						className="w-full max-h-52 object-cover bg-center"
						src="/about.jpg"
						alt="Banner"
						width={1000}
						height={1000}
						priority
					/>
				</div>
				<div className="w-full p-7 pb-3 flex flex-col gap-5">
					<h1
						className={lexend.className}
						style={{ fontSize: 50, fontWeight: 800, lineHeight: 1 }}>
						{lang ? "My experience" : "Mi experiencia"}
					</h1>
				</div>

				<div className="w-full p-7 pt-0 flex flex-wrap gap-10">
					<div className="flex flex-col gap-5">
						<p className="text-xl pt-3 font-sans">
							{lang
								? "I have 2 years of experience in web and mobile application development using technologies such as HTML, CSS, JavaScript and React. I have worked on projects with multidisciplinary teams and I have always made sure to meet client requirements and deadlines."
								: "Tengo 2 años de experiencia en desarrollo de aplicaciones web y móviles utilizando tecnologías como HTML, CSS, JavaScript y React. He trabajado en proyectos con equipos multidisciplinares y siempre me he asegurado de cumplir con los requisitos y plazos del cliente."}
							<br />
							{lang
								? "In addition to my technical skills, I am a proactive, hardworking and eager to learn person. I love keeping up with the latest trends in technology and am always looking for new challenges and opportunities to improve my skills. I would love to apply my skills and experience in great companies and contribute to the development of high quality applications."
								: "Además de mis habilidades técnicas, soy una persona proactiva, trabajadora y con ganas de aprender. Me encanta estar al día de las últimas tendencias en tecnología y siempre estoy buscando nuevos retos y oportunidades para mejorar mis habilidades. Me encantaría aplicar mis habilidades y experiencia en grandes empresas y contribuir al desarrollo de aplicaciones de alta calidad."}
							<br />
							<br />
							<p className="text-xl font-sans">
								{lang
									? "With my experience in React, I am able to create responsive user interfaces and implement complex functionality with the help of component-based architecture. I'm a quick learner and work well under pressure, and I am excited about the opportunity to bring my skills and experience to a new role as a web developer."
									: "Con mi experiencia en React, soy capaz de crear interfaces de usuario responsivas e implementar funcionalidades complejas con la ayuda de la arquitectura basada en componentes. Aprendo rápido y trabajo bien bajo presión, y estoy entusiasmado con la oportunidad de aportar mis habilidades y experiencia a un nuevo papel como desarrollador web."}
								<br />
								<br />
								{lang
									? "Always looking for new opportunities to improve my skills, gain recognition for my knowledge and values and take on additional responsibilities and grow professionally."
									: "Siempre en busca de nuevas oportunidades para mejorar mis habilidades, obtener reconocimiento por mis conocimientos y valores y asumir responsabilidades adicionales y crecer profesionalmente."}
							</p>
							<br />
							{lang ? "Thanks for reading. ❤️" : "Gracias por leer. ❤️"}
						</p>
					</div>

					<div>
						<h1
							className={lexend.className}
							style={{ fontSize: 30, fontWeight: 800, lineHeight: 1 }}>
							{lang ? "Some of the great technologies I have knowledge and experience with" : "Algunas de las grandes tecnologias que tengo conocimientos y experiencia"}
						</h1>
					</div>
					<div className="flex flex-wrap gap-5 text-4xl">
						<FaReact className="cursor-pointer hover:text-blue-300" />
						<TbBrandNextjs className="cursor-pointer hover:text-slate-300" />
						<SiJavascript className="cursor-pointer hover:text-yellow-400" />
						<SiTypescript className="cursor-pointer hover:text-blue-500" />
						<FaNodeJs className="cursor-pointer hover:text-green-500" />
						<FaHtml5 className="cursor-pointer hover:text-orange-400" />
						<FaCss3Alt className="cursor-pointer hover:text-blue-300" />
						<SiTailwindcss className="cursor-pointer hover:text-blue-300" />
						<SiMongodb className="cursor-pointer hover:text-green-500" />
						<SiMysql className="cursor-pointer hover:text-blue-300" />
						<FaGitAlt className="cursor-pointer hover:text-orange-400" />
						<FaGithub className="cursor-pointer hover:text-slate-300" />
						<SiBitbucket className="cursor-pointer hover:text-blue-500" />
						<SiJirasoftware className="cursor-pointer hover:text-blue-300" />
					</div>

					<div className="flex flex-wrap gap-3">
						{ExperiencesData.map(
							(
								{
									puest,
									emprise,
									country,
									dateInitial,
									dateFinish,
									description,
									descriptionE,
								},
								index
							) => (
								<div
									key={index}
									className={`${
										theme
											? "relative p-5 border border-black/5 rounded-md flex flex-col gap-1 duration-200 hover:border-black/10 hover:shadow-lg"
											: "relative p-5 border border-white/5 rounded-md flex flex-col gap-1 duration-200 hover:border-white/20 hover:shadow-lg shadow hover:shadow-white/5"
									}`}>
										<div
										className={`${
											dateFinish
												? "absolute w-10 h-10 left-0 rounded-full animate-bg3 bg-amber-200/50 blur-3xl"
												: "absolute w-10 h-10 left-0 rounded-full animate-bg3 blur-3xl"
										}`}></div>
									<h1 className="text-2xl font-black">{puest}</h1>
									<div className="flex flex-col gap-2">
										<b className="text-xl">{emprise}</b>
										<p>
											{country} | {dateInitial} -{" "}
											{dateFinish ? dateFinish : "Actualmente"}
										</p>
									</div>
									<p
										className={`${
											theme
												? "font-sans text-lg text-black/50"
												: "font-sans text-lg text-white/50"
										}`}>
										{lang ? description : descriptionE}
									</p>
								</div>
							)
						)}
					</div>
				</div>
				<Footer
					theme={theme}
					setTheme={setTheme}
					lang={lang}
					setLang={setLang}
				/>
			</div>
		</>
	);
}
